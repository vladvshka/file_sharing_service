# для хранения кэша проксированных ответов создаётся зона с именем PROXYCACHE размером 64МБ (в 1МБ хранится ~8000 ключей)
# файлы кэша будут хранится в указанной папке, разбитой на подпапки по 1-й букве и 2-3 буквам имени файла
# элементы кэша хранятся максимум год, независимо от их свежести
# максимум может храниться 1ГБ файлов
proxy_cache_path /home/nodeuser/NodeArch/nginx_caches/server7610 keys_zone=PROXYCACHE:64m levels=1:2 inactive=1y max_size=1g;

# hide Nginx version number and Operating system on errors
server_tokens off;

server {
    # allow the maximum size of the client request body
    client_max_body_size 20M;
    listen 7181;
    # ip or hostname
    server_name 178.172.195.18;

    # логи успешных обращений пишутся сюда
    access_log /home/user/nodeProjects/file_sharing_service/nginx_logs/default_access.log;
    # логи ошибок пишутся сюда
    error_log  /home/user/nodeProjects/file_sharing_service/nginx_logs/default_error.log;

    # включаем сжатие вообще
    gzip on;
    gzip_disable "msie6";
    gzip_min_length 512;
    gzip_buffers 4 8k;
    gzip_types text/plain text/xml application/xml text/css application/x-javascript application/javascript application/json text/javascript;
    # степень сжатия от 1 до 9, чем больше степень - тем меньше ответ но тем больше ресурсов процессора тратится на сжатие
    gzip_comp_level 8;

    location ~ \.(css|jpg|json|html)$ {
        root /home/user/nodeProjects/file_sharing_service/public;
        expires 1h;
    }

    location ~ / {
        # относительно nginx сервер Express располагается на том же компьютере, т.е. на localhost или 127.0.0.1
        proxy_pass http://127.0.0.1:8000;

        gzip_comp_level 3;

        # использовать кэш проксированных ответов с таким именем
        proxy_cache PROXYCACHE;
        # кэшировать на 1 минуту
        proxy_cache_valid 60s;
        # добавляем заголовок ответа клиенту, чтобы мы видели, взят ответ из кэша или нет
        add_header X-Cached $upstream_cache_status;
    }
}